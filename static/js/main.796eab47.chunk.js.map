{"version":3,"sources":["components/FormWithValidation/style.module.css","components/SubmitButton/style.module.css","components/Select/style.module.css","App.module.css","components/Label/style.module.css","components/ValidationSummary/style.module.css","components/Input/style.module.css","components/Textarea/style.module.css","components/SubmitButton/index.jsx","services/DataService.js","components/PrettyPrintObject/index.jsx","components/FormWithValidation/index.jsx","utils/validation/generalTypes.js","utils/validation/strings.js","utils/validation/numbers.js","utils/validation/dates.js","utils/validation/files.js","services/ColorsService.js","components/Label/index.jsx","components/withLabel.jsx","utils/validation/validator.js","components/ValidationSummary/index.jsx","components/withValidationSummary.jsx","components/Input/index.jsx","components/Select/index.jsx","components/Textarea/index.jsx","App.jsx","index.jsx"],"names":["module","exports","SubmitButton","disabled","children","type","className","styles","active","DataService","sendForm","data","formData","Object","entries","reduce","acc","k","v","FileList","forEach","x","i","append","FormData","fetch","method","body","status","console","log","PrettyPrintObject","object","indentation","JSON","stringify","FormWithValidation","props","setValueOf","name","value","form","registerValidator","validateFunc","validators","unregisterValidator","submitHandler","event","a","preventDefault","setState","submitDisabled","hasValidationError","map","hasOwnProperty","sentData","state","configureChildren","prevProps","prevState","snapshot","this","setValue","result","href","encType","onSubmit","Component","Field","shouldMatch","regex","errorMessage","propName","test","isRequired","String","hasMaxLength","number","length","hasMinLength","Number","isLessThan","isGreaterThan","isBetween","b","isEven","DateField","isInFormat","format","dayjs","isValid","isAfter","date","Files","areOfType","mimeType","filter","haveSingleSizeLessThan","size","bytes","kb","mb","nameFollowsPattern","maxCount","count","colors","key","textContent","ColorsService","getAll","Promise","resolve","setTimeout","Label","label","htmlFor","for","required","withLabel","WrappedComponent","WithLabel","wrappedComponentProps","defaultProps","wrappedComponentName","displayName","validator","predicateMessageTuples","validate","predicate","ValidationSummary","errorMessages","validationSummary","defaultValues","withValidationSummary","WithValidationSummary","PropTypes","func","arrayOf","elementRef","React","createRef","begunValidation","bind","beginValidating","changeHandler","validations","current","files","focus","ref","onBlur","onChange","filterOutWrappedComponentProps","Input","forwardRef","input","Select","useState","setData","initiallyEmpty","getData","selectProps","useEffect","then","d","visible","hidden","defaultValue","Textarea","textarea","InputWithValidation","SelectWithValidation","TextareaWithValidation","App","container","StringField","step","NumberField","Date","FilesField","multiple","cols","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.796eab47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__233-9\",\"result\":\"style_result__2tbOj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"style_active__KygeZ\",\"disabled\":\"style_disabled__338BG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visible\":\"style_visible__1AQT9\",\"hidden\":\"style_hidden__3Godo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__23Tvh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__3WK15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"validationSummary\":\"style_validationSummary__1jgZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__2bA1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"style_textarea__1vwSl\"};","import React from 'react'\r\nimport styles from './style.module.css'\r\n\r\nexport default function SubmitButton({disabled, children}) {\r\n    return (\r\n        <button\r\n            type=\"submit\"\r\n            className={disabled ? styles.disabled : styles.active}\r\n            disabled={disabled}\r\n        >\r\n            {children}\r\n        </button>)\r\n}\r\n","const apiUrl = 'https://webhook.site/d58c2bb7-5c45-46a5-828d-438c5080249b'\r\n\r\nconst DataService = {\r\n    async sendForm(data) {\r\n        try {\r\n            const formData = Object.entries(data).reduce((acc, [k, v]) => {\r\n                if (v instanceof FileList)\r\n                    [...v].forEach((x, i) => acc.append(`file${i}`, x))\r\n                else\r\n                    acc.append(k, v)\r\n                return acc\r\n            }, new FormData())\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: 'post',\r\n                body: formData,\r\n            })\r\n\r\n            if (response.status !== 200)\r\n                return false;\r\n        } catch (e) {\r\n            console.log(e)\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n}\r\n\r\nexport default DataService\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nPrettyPrintObject.propTypes = {\r\n    object: PropTypes.object\r\n}\r\n\r\nexport default function PrettyPrintObject({object, indentation}) {\r\n    return <div><pre>{JSON.stringify(object, null, indentation || 4)}</pre></div>\r\n}\r\n","import React, {Component} from 'react';\r\nimport styles from './style.module.css';\r\nimport SubmitButton from \"../SubmitButton\";\r\nimport DataService from \"../../services/DataService\";\r\nimport PrettyPrintObject from \"../PrettyPrintObject\";\r\n\r\nexport default class FormWithValidation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            sentData: false,\r\n            submitDisabled: false,\r\n        }\r\n\r\n        this.form = {}\r\n        this.validators = {}\r\n        this.configureChildren()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.configureChildren()\r\n    }\r\n\r\n    /**\r\n     * Attaches functions for communication and control to children\r\n     */\r\n    configureChildren() {\r\n        this.children = this.props.children\r\n            .map(x => ({\r\n                ...x,\r\n                props: {\r\n                    ...x.props,\r\n                    setValue: this.setValueOf(x.props.name),\r\n                    registerValidator: this.registerValidator(x.props.name),\r\n                    unregisterValidator: this.unregisterValidator(x.props.name),\r\n                },\r\n            }))\r\n    }\r\n\r\n    /**\r\n     * Curries a function for setting input component value\r\n     * @param {String} name Name from the input component\r\n     * @returns {function(*)} Callback for setting form[name] value\r\n     */\r\n    setValueOf = (name) => (value) => this.form[name] = value\r\n\r\n    /**\r\n     * Curries a function for registering input component validation method\r\n     * @param name {String} Name from the input component\r\n     * @returns {function(function(): void): void} Callback for adding validator function to validators object\r\n     */\r\n    registerValidator = (name) => (validateFunc) => this.validators[name] = validateFunc\r\n\r\n    /**\r\n     * Curries a function for unregistering input component validation method\r\n     * @param name {String} Name from the input component\r\n     * @returns {function(): boolean} Callback for removing validator function from validators object\r\n     */\r\n    unregisterValidator = (name) => () => delete this.validators[name]\r\n\r\n    submitHandler = async (event) => {\r\n        event.preventDefault()\r\n\r\n        await this.setState({submitDisabled: true})\r\n\r\n        let hasValidationError = false\r\n        for (const name of this.children.map(x => x.props.name)) {\r\n            if (this.validators.hasOwnProperty(name)) {\r\n                this.validators[name]()\r\n                if (!this.form.hasOwnProperty(name) || this.form[name] === null){\r\n                    hasValidationError = true\r\n                    break\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hasValidationError) {\r\n            this.setState({submitDisabled: false})\r\n            return\r\n        }\r\n\r\n        if (await DataService.sendForm(this.form))\r\n            this.setState({sentData: true})\r\n\r\n        this.setState({submitDisabled: false})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!!this.state.sentData ? (\r\n                        <div className={styles.result}>\r\n                            <div>See results:&nbsp;\r\n                                <a href=\"https://webhook.site/#!/d58c2bb7-5c45-46a5-828d-438c5080249b/2f4aa726-34b1-4b44-90ac-778cc2da4e2f/1\">\r\n                                    click\r\n                                </a>\r\n                            </div>\r\n                            <PrettyPrintObject object={this.form} />\r\n                        </div>\r\n                    )\r\n                    : <></>}\r\n                <form\r\n                    className={styles.form}\r\n                    method=\"post\"\r\n                    encType=\"multipart/form-data\"\r\n                    onSubmit={this.submitHandler}\r\n                >\r\n                    {this.children}\r\n                    <SubmitButton disabled={this.state.submitDisabled}>\r\n                        Submit\r\n                    </SubmitButton>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","const value = 'The field'\r\n\r\nconst Field = {\r\n    shouldMatch(regex, {errorMessage, propName} = {}) {\r\n        return (x) =>\r\n            [regex.test(x), errorMessage || `${propName || value} does not match the pattern ${regex}`]\r\n    },\r\n    isRequired({errorMessage, propName} = {}) {\r\n        return (x) =>\r\n            [typeof x !== \"undefined\" && x !== '', errorMessage || `${propName || value} is required`]\r\n    },\r\n}\r\n\r\nexport default Field\r\n\r\n\r\n","const value = 'The string'\r\n\r\nconst String = {\r\n    hasMaxLength(number, {errorMessage, propName} = {}) {\r\n        return (x) =>\r\n            [x.length <= number, errorMessage || `${propName || value} should be smaller than ${number} chars`]\r\n    },\r\n    hasMinLength (number, {errorMessage, propName} = {})\r\n    {\r\n        return (x) =>\r\n            [x.length >= number, errorMessage || `${propName || value} should be more than ${number} chars`]\r\n    },\r\n}\r\n\r\nexport default String\r\n","const value = 'The value'\r\n\r\nconst Number = {\r\n    isLessThan(a, {errorMessage, propName} = {}) {\r\n        return (x) =>\r\n            [+x < +a, errorMessage || `${propName || value} should be less than ${a}`]\r\n    },\r\n    isGreaterThan(a, {errorMessage, propName} = {}) {\r\n        return (x) =>\r\n            [+x > +a, errorMessage || `${propName || value} should be greater than ${a}`]\r\n    },\r\n    isBetween(a, b, {errorMessage, propName} = {}) {\r\n        return (x) =>\r\n            [+x > +a && +x < +b, errorMessage || `${propName || value} should be between ${a} and ${b} (not inclusive)`]\r\n    },\r\n    isEven({errorMessage, propName} = {}) {\r\n        return (x) =>\r\n            [+x % 2 === 0, errorMessage || `${propName || value} should be even`]\r\n    },\r\n}\r\n\r\nexport default Number\r\n","import dayjs from \"dayjs\";\r\n\r\nconst value = 'Date'\r\n\r\nconst DateField = {\r\n    isInFormat(format, {errorMessage, propName} = {}) {\r\n        return (x) => [dayjs(x).isValid(), errorMessage || `${propName || value} should be in format \"${format}\"`]\r\n    },\r\n    isAfter(date, {errorMessage, propName} = {}){\r\n        return (x) => [dayjs(x).isAfter(date), errorMessage || `${propName || value} should be after ${date}`]\r\n    },\r\n}\r\n\r\nexport default DateField\r\n","const value = 'The file'\r\n\r\nconst Files = {\r\n    areOfType(mimeType, {errorMessage, propName} = {}) {\r\n        return ([...files]) => [\r\n            files.filter(x => x.type !== mimeType).length === 0,\r\n            errorMessage || `${propName || value} should be of type ${mimeType}`\r\n        ]\r\n    },\r\n    haveSingleSizeLessThan(size) {\r\n        return {\r\n            bytes({errorMessage, propName} = {}) {\r\n                return ([...files]) => [\r\n                    files.filter(x => x.size >= size).length === 0,\r\n                    errorMessage || `${propName || value} should be less than ${size} bytes`]\r\n            },\r\n            kb({errorMessage, propName} = {}) {\r\n                return ([...files]) => [\r\n                    files.filter(x => x.size >= size * 1000).length === 0,\r\n                    errorMessage || `${propName || value} should be less than ${size} kb`]\r\n            },\r\n            mb({errorMessage, propName} = {}) {\r\n                return ([...files]) => [\r\n                    files.filter(x => x.size  >= size * 1000000).length === 0,\r\n                    errorMessage || `${propName || value} should be less than ${size} mb`]\r\n            },\r\n        }\r\n    },\r\n    nameFollowsPattern(regex, {errorMessage, propName} = {}) {\r\n        return ([...files]) => [files.filter(x => !regex.test(x.name)).length === 0,\r\n            errorMessage || `${propName || value} name should follow pattern ${regex}`]\r\n    },\r\n    maxCount(count, {errorMessage, propName} = {}) {\r\n        return ([...files]) => [files.length <= count, errorMessage || `${propName || value} count should be ${count} or less`]\r\n    }\r\n}\r\n\r\nexport default Files\r\n","const colors = [\r\n    {key: '#FF0000', value: 'red', textContent: 'Red'},\r\n    {key: '#00FF00', value: 'green', textContent: 'Green'},\r\n    {key: '#0000FF', value: 'blue', textContent: 'Blue'},\r\n];\r\n\r\nconst ColorsService = {\r\n    async getAll() {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        return colors\r\n    }\r\n}\r\n\r\nexport default ColorsService;\r\n","import React from 'react'\r\nimport styles from './style.module.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nLabel.propTypes = {\r\n    for: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    required: PropTypes.bool,\r\n}\r\n\r\nLabel.defaultProps = {\r\n    required: false,\r\n}\r\n\r\nexport default function Label(props) {\r\n    return (\r\n        <div>\r\n            <label\r\n                className={styles.label}\r\n                htmlFor={props.for}\r\n            >\r\n                {props.label}{props.required ? ' (required)' : ''}:\r\n            </label>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Label from \"./Label\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nwithLabel.propTypes = {\r\n    WrappedComponent: PropTypes.element.isRequired,\r\n}\r\n\r\nexport default function withLabel(WrappedComponent) {\r\n    WithLabel.propTypes = {\r\n        label: PropTypes.string.isRequired,\r\n        required: PropTypes.bool,\r\n    }\r\n\r\n    WithLabel.defaultProps = {\r\n        required: false\r\n    }\r\n\r\n    function WithLabel(props) {\r\n        const {label, required, ...wrappedComponentProps} = props\r\n        return (\r\n            <Label label={label} required={required} for={wrappedComponentProps.name}>\r\n                <WrappedComponent {...wrappedComponentProps}/>\r\n            </Label>\r\n        )\r\n    }\r\n\r\n    const wrappedComponentName = WrappedComponent.displayName\r\n        || WrappedComponent.name\r\n        || 'Component'\r\n\r\n    WithLabel.displayName = `withLabel(${wrappedComponentName})`\r\n\r\n    return WithLabel\r\n}\r\n","export default function validator(predicateMessageTuples) {\r\n    return {\r\n        validate(x) {\r\n            return predicateMessageTuples\r\n                .map((predicate) => predicate(x))\r\n                .reduce((acc, [isValid, errorMessage]) => isValid\r\n                    ? acc\r\n                    : [...acc, errorMessage], [])\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport styles from './style.module.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nValidationSummary.propTypes = {\r\n    errorMessages: PropTypes.arrayOf(PropTypes.string),\r\n    children: PropTypes.element.isRequired,\r\n}\r\n\r\nValidationSummary.defaultValues = {\r\n    errorMessages: [],\r\n}\r\n\r\nexport default function ValidationSummary (props) {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {props.errorMessages\r\n                    .map(x => (\r\n                        <li className={styles.validationSummary} key={x}>{x}</li>\r\n                    ))}\r\n            </ul>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from 'react'\r\nimport validator from '../utils/validation/validator'\r\nimport ValidationSummary from \"./ValidationSummary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function withValidationSummary(WrappedComponent) {\r\n    const wrappedComponentName = WrappedComponent.displayName\r\n        || WrappedComponent.name\r\n        || 'Component'\r\n    const displayName = `withValidationSummary(${wrappedComponentName})`\r\n\r\n\r\n    const propTypes = {\r\n        registerValidator: PropTypes.func.isRequired,\r\n        unregisterValidator: PropTypes.func.isRequired,\r\n        setValue: PropTypes.func.isRequired,\r\n        validations: PropTypes.arrayOf(PropTypes.func),\r\n    }\r\n\r\n    const defaultValues = {\r\n        validations: []\r\n    }\r\n\r\n    class WithValidationSummary extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                errorMessages: [],\r\n            }\r\n\r\n            this.elementRef = React.createRef()\r\n            this.begunValidation = false\r\n            this.validate = this.validate.bind(this)\r\n            this.beginValidating = this.beginValidating.bind(this)\r\n            this.changeHandler = this.changeHandler.bind(this)\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.validator = validator(this.props.validations)\r\n            this.props.registerValidator(this.validate)\r\n        }\r\n\r\n        componentDidUpdate(prevProps, prevState, snapshot) {\r\n            this.validator = validator(this.props.validations)\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.props.unregisterValidator()\r\n        }\r\n\r\n        /**\r\n         * Validates the element ref field\r\n         */\r\n        validate() {\r\n            this.begunValidation = true\r\n            const value = this.elementRef.current.files || this.elementRef.current.value\r\n            const errorMessages = this.validator.validate(value)\r\n\r\n            const isValid = !errorMessages.length\r\n\r\n            if (!isValid)\r\n                this.elementRef.current.focus()\r\n\r\n            this.setState({errorMessages})\r\n            this.props.setValue(isValid ? value : null)\r\n        }\r\n\r\n        beginValidating () {\r\n            if (!!this.begunValidation) return;\r\n            this.begunValidation = true\r\n            this.changeHandler()\r\n        }\r\n\r\n        changeHandler() {\r\n            if (!this.begunValidation) return;\r\n            this.validate()\r\n        }\r\n\r\n        filterOutWrappedComponentProps(){\r\n            const {validations, setValue, registerValidator, unregisterValidator, ...wrappedComponentProps} = this.props\r\n            return wrappedComponentProps\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <ValidationSummary errorMessages={this.state.errorMessages}>\r\n                    <WrappedComponent\r\n                        ref={this.elementRef}\r\n                        onBlur={this.beginValidating}\r\n                        onChange={this.changeHandler}\r\n                        {...this.filterOutWrappedComponentProps()}\r\n                    />\r\n                </ValidationSummary>\r\n            )\r\n        }\r\n    }\r\n\r\n    WithValidationSummary.displayName = displayName\r\n    WithValidationSummary.propTypes = propTypes\r\n    WithValidationSummary.defaultValues = defaultValues\r\n\r\n    return WithValidationSummary;\r\n}\r\n","import React from 'react'\r\nimport styles from './style.module.css'\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n    return <input ref={ref} className={styles.input} {...props} />\r\n})\r\n\r\nInput.displayName = 'Input'\r\n\r\nexport default Input\r\n","import React, {useState, useEffect} from 'react'\r\nimport styles from './style.module.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst displayName = 'Select'\r\n\r\nconst propTypes = {\r\n    getData: PropTypes.func.isRequired,\r\n    initiallyEmpty: PropTypes.bool,\r\n}\r\n\r\nconst Select = React.forwardRef(function (props, ref) {\r\n    const [data, setData] = useState(null)\r\n\r\n    const {initiallyEmpty, getData, ...selectProps} = props\r\n\r\n    useEffect(function () {\r\n        if (!!getData)\r\n            getData().then(d => setData(d))\r\n    }, [getData])\r\n\r\n    return (\r\n        <>\r\n            {!data ? <div>Loading...</div> : <></>}\r\n            <select\r\n                ref={ref}\r\n                className={!!data ? styles.visible : styles.hidden}\r\n                {...selectProps}\r\n                hidden={!data}\r\n                defaultValue=''>\r\n                {initiallyEmpty ? <option hidden disabled value='' /> : ''}\r\n                {data?.map(({key, value, textContent}) => (\r\n                    <option key={key} value={value}>{textContent || value}</option>))}\r\n            </select>\r\n        </>\r\n    )\r\n})\r\n\r\nSelect.displayName = displayName\r\nSelect.propTypes = propTypes\r\n\r\nexport default Select\r\n","import React from 'react'\r\nimport styles from './style.module.css'\r\n\r\nconst Textarea = React.forwardRef((props, ref) => {\r\n    return <textarea ref={ref} className={styles.textarea} {...props}/>\r\n})\r\n\r\nTextarea.displayName = 'Textarea'\r\n\r\nexport default Textarea\r\n","import React from 'react'\nimport styles from './App.module.css';\nimport FormWithValidation from \"./components/FormWithValidation\";\nimport Field from \"./utils/validation/generalTypes\";\nimport StringField from \"./utils/validation/strings\";\nimport NumberField from \"./utils/validation/numbers\";\nimport DateField from \"./utils/validation/dates\";\nimport FilesField from \"./utils/validation/files\";\nimport ColorsService from \"./services/ColorsService\";\nimport withLabel from \"./components/withLabel\";\nimport withValidationSummary from \"./components/withValidationSummary\";\nimport Input from \"./components/Input\";\nimport Select from \"./components/Select\";\nimport Textarea from \"./components/Textarea\";\n\nconst InputWithValidation = withLabel(withValidationSummary(Input))\nconst SelectWithValidation = withLabel(withValidationSummary(Select))\nconst TextareaWithValidation = withLabel(withValidationSummary(Textarea))\n\nexport default function App() {\n    return (\n        <div className={styles.container}>\n            <div />\n            <FormWithValidation>\n                <InputWithValidation\n                    name=\"first-name\"\n                    required\n                    label=\"First name\"\n                    validations={[\n                        Field.isRequired({propName: 'First name'}),\n                        StringField.hasMaxLength(64, {propName: 'First name'}),\n                        StringField.hasMinLength(2, {propName: 'First name'}),\n                    ]}\n                />\n                <InputWithValidation\n                    name=\"last-name\"\n                    required\n                    label=\"Last name\"\n                    validations={[\n                        Field.isRequired({propName: 'Last name'}),\n                        StringField.hasMaxLength(64, {propName: 'Last name'}),\n                        StringField.hasMinLength(2, {propName: 'Last name'}),\n                    ]}\n                />\n                <InputWithValidation\n                    name=\"email\"\n                    type=\"email\"\n                    required\n                    label=\"Email\"\n                    validations={[\n                        Field.isRequired({propName: 'Email'}),\n                        Field.shouldMatch(\n                            /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i,\n                            {errorMessage: 'Email is invalid'}),\n                    ]}\n                />\n\n                <InputWithValidation\n                    name=\"phone\"\n                    type=\"tel\"\n                    label=\"Phone\"\n                    validations={[\n                        Field.shouldMatch(\n                            /^((\\([0-9]{3}\\)|[0-9]{3})\\s[0-9]{3}[-\\s]?[0-9]{4,6}|)$/im,\n                            {\n                                errorMessage: `Phone number should be in some of the following formats: ${\n                                    '(123) 456-7890, ' +\n                                    '(123) 456 7890, ' +\n                                    '123 456 7890, ' +\n                                    '123 456-7890'}`\n                            })\n                    ]}\n                />\n\n                <InputWithValidation\n                    name=\"lucky-number\"\n                    type=\"number\"\n                    step=\"2\"\n                    required\n                    label=\"Lucky number\"\n                    validations={[\n                        Field.isRequired(),\n                        NumberField.isGreaterThan(1),\n                        NumberField.isLessThan(10),\n                        NumberField.isBetween(1, 10),\n                        NumberField.isEven(),\n                    ]}\n                />\n\n                <InputWithValidation\n                    name=\"date\"\n                    type=\"date\"\n                    required\n                    label=\"Date\"\n                    validations={[\n                        Field.isRequired(),\n                        DateField.isAfter(new Date())\n                    ]}\n                />\n\n                <InputWithValidation\n                    name=\"file\"\n                    type=\"file\"\n                    label=\"File\"\n                    validations={[\n                        FilesField.haveSingleSizeLessThan(500).kb(),\n                        FilesField.areOfType('image/jpeg'),\n                        FilesField.nameFollowsPattern(/.jpg$/i, {errorMessage: 'Filename should end with \".jpg\"'}),\n                        FilesField.maxCount(2),\n                    ]}\n                    multiple\n                />\n\n                <SelectWithValidation\n                    name=\"rgb-colors\"\n                    required\n                    label=\"RGB Colors\"\n                    getData={ColorsService.getAll}\n                    validations={[\n                        Field.isRequired({propName: 'Color'}),\n                    ]}\n                    initiallyEmpty\n                />\n\n                <TextareaWithValidation\n                    name=\"application-letter\"\n                    cols={50}\n                    required\n                    label=\"Application letter\"\n                    validations={[\n                        Field.isRequired({propName: 'Application letter'}),\n                        StringField.hasMinLength(50, {propName: 'Application letter'}),\n                        StringField.hasMaxLength(450, {propName: 'Application letter'}),\n                    ]}\n                />\n            </FormWithValidation>\n            <div />\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}